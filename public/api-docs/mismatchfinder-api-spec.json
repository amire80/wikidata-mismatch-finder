{
    "openapi": "3.0.0",
    "info": {
        "title": "Wikidata Mismatch Finder Documentation",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://mismatch-finder.toolforge.org"
        }
    ],
    "paths": {
        "/imports/": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Get meta information on all mismatch imports",
                "description": "Display the list of imports (latest 10)",
                "operationId": "getImportsList",
                "responses": {
                    "200": {
                        "description": "Meta information on mismatch imports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfImportMeta"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "store"
                ],
                "summary": "Upload a mismatch file to import",
                "description": "Store a newly created resource in storage.",
                "operationId": "postImport",
                "requestBody": {
                    "description": "CSV file upload",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "mismatch_file"
                                ],
                                "properties": {
                                    "mismatch_file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 350
                                    },
                                    "external_source": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "external_source_url": {
                                        "type": "string",
                                        "maxLength": 1500
                                    },
                                    "expires": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Upload successful, import resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mismatch"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/schemas/ClientError"
                    },
                    "422": {
                        "$ref": "#/components/schemas/ValidationErrors"
                    }
                }
            }
        },
        "/imports/{import_id}": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Get meta information on a single mismatch import.",
                "description": "Display the specified resource.",
                "operationId": "getImportById",
                "parameters": [
                    {
                        "name": "importId",
                        "in": "path",
                        "description": "The ID of the Import to show",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meta information on a mismatch import",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ImportMeta"
                                        },
                                        {
                                            "$ref": "#/components/schemas/FailedImportMeta"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFound"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mismatches/": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Get mismatches by item IDs",
                "description": "Display a listing of the resource",
                "operationId": "getMismatchesList",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of |-separated item IDs to get mismatches for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_reviewed",
                        "in": "query",
                        "description": "Include reviewed mismatches? (default: false)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_expired",
                        "in": "query",
                        "description": "Include expired mismatches? (default: false)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of mismatches, potentially empty if none are found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfMismatches"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrors"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mismatches/{mismatchId}": {
            "put": {
                "tags": [
                    "store"
                ],
                "summary": "Update Mismatch review status",
                "description": "Update review_status of the resource.",
                "operationId": "putMismatch",
                "parameters": [
                    {
                        "name": "mismatchId",
                        "in": "path",
                        "description": "The ID of the Mismatch to update",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "description": "An object with the new review status field.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FillableMismatch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated mismatch.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mismatch"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrors"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "FailedImportMeta": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ImportMeta"
                    },
                    {
                        "property": "error",
                        "type": "string"
                    }
                ]
            },
            "FillableMismatch": {
                "properties": {
                    "review_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "wikidata",
                            "external",
                            "both",
                            "none"
                        ]
                    }
                },
                "type": "object"
            },
            "ImportMeta": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "failed",
                            "completed"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 350
                    },
                    "expires": {
                        "type": "string",
                        "format": "date"
                    },
                    "created": {
                        "type": "string",
                        "format": "date"
                    },
                    "uploader": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ListOfImportMeta": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ImportMeta"
                                },
                                {
                                    "$ref": "#/components/schemas/FailedImportMeta"
                                }
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "ListOfMismatches": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Mismatch"
                        }
                    }
                },
                "type": "object"
            },
            "Mismatch": {
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "item_id": {
                                "type": "string"
                            },
                            "statement_guid": {
                                "type": "string"
                            },
                            "property_id": {
                                "type": "string"
                            },
                            "wikidata_value": {
                                "type": "string"
                            },
                            "external_value": {
                                "type": "string"
                            },
                            "external_url": {
                                "type": "string"
                            },
                            "import": {
                                "$ref": "#/components/schemas/ImportMeta"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "reviewer": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/FillableMismatch"
                    }
                ]
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "username": {
                        "type": "string"
                    },
                    "mw_userid": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "ClientError": {
                "title": "ClientError",
                "description": "Bad request",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotFound": {
                "title": "NotFound",
                "description": "The specified resource was not found",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UnexpectedError": {
                "title": "UnexpectedError",
                "description": "An unexpected error has occurred",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ValidationErrors": {
                "title": "Validation Errors",
                "description": "Invalid data in request body",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "attribute_name": [
                                "string"
                            ]
                        },
                        "additionalProperties": [
                            {
                                "property": "items",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}